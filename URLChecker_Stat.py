#-*- coding: UTF-8 -*-
import sys
import re
import urllib
import subprocess
import random
import string
import operator
from collections import defaultdict
from URLChecker import *
from URLChecker_Util import *

SUSPICIOUS_TYPE_DOMAIN_HOSTS = "domain_hosts"
SUSPICIOUS_TYPE_DOMAIN_URLS = "domain_urls"
SUSPICIOUS_TYPE_URL_KEYWORDS = "url_keyword"
SUSPICIOUS_TYPE_DOMAIN_NEW = "domain_new"

rand_str = string.lowercase + string.digits
def generateRandomString(length):
    return ''.join(random.choice(rand_str) for i in xrange(length))
   
def dumpInfoCnt(filename, d_key_value):
    fw = open(filename, 'w')
    
    sorted_key_value = sorted(d_key_value.items(), key=lambda item: len(item[1]), reverse=True)
    for item in sorted_key_value:
        key = item[0]
        value = item[1]
        fw.write("%s\t_cnt_\t%d\n"%(key, len(value)))
        for v in value:
            fw.write("\t%s\n"%v)
    fw.close()

def loadDomainKeyWords():
    '''
    this is usually the all_host_ip data,  the newly domain
    mkiller_2016-12-29%26domain.txt 
    
    date	host_ip
    2016-12-29	titan-rich.com
    2016-12-29	yunniupin.com
    '''
    s_domain = set()
    try:
        sys.argv[2]
    except:
        return set()
        
    with open(sys.argv[2]) as fr:
        for line in fr:
            s_domain.add(line.strip().split("\t")[1])
    return s_domain
            
def loadHostKeywords():
    return set(["mail.easternmills.com","xy.jx.dynamic.163data.com.cn.jxzhjy.com",])
    
def finditem(anchor_begin, anchor_end, line):
    index = line.find(anchor_begin)
    if -1 == index:
        return ''
        
    if anchor_end == '':
        return line[index + len(anchor_begin) : ]
    
    index_end = line[index + len(anchor_begin): ].find(anchor_end)
    if -1 == index_end:
        return line[index + len(anchor_begin) :]
    return line[index + len(anchor_begin) : index + len(anchor_begin) + index_end]
      
class URLChecker_Stat:
    def __init__(self):
        self.urlchecker = URLChecker()
        self.url_util = URLChecker_Util()
        
        self.d_domain_hosts = {}
        self.d_hostInAlexaTop_urls = {}
        
        self.new_domain = set()
        self.domain_level = {}
        
        self.s_suspiciousDomain = defaultdict(set)  #'domain':'suspicious_type'   suspicious_type can be domain_hosts, or domain_url
        self.d_sus_domain_keyword = {}  # to know domain suspicious by which keyword
        
        self.s_DomainKeywords = loadDomainKeyWords()
        #self.s_HostKeywords = loadHostKeywords()
        
        self.d_urlkeywords_cnt = defaultdict(int)
        self.d_urlkeywords_domain = defaultdict(set)
        self.d_urlkeywords_isInAlexTop = defaultdict(set)
        
    def hitKeyWords(self, line):
        for k in self.s_keywords:
            if line.find(k) != -1:
                return True
        return False

    def hitDomain(self, domain):
        if domain in self.s_DomainKeywords:
            return True
        return False
    
    def loadNewHostIP(self):
        '''
        新增hosts 对应的domain数据
        '''
        try:
            with open('new_domain.txt') as fr:
                for line in fr:
                    self.new_domain.add(line.strip())
        except:
            pass
                
    def loadDomainLevel(self):
        '''
        goplaygames.es	1	1.000000	1	1
        '''
        try:
            with open('domain_level.txt') as fr:
                for line in fr:
                    domain, cntHosts, riskpercent, total, risk = line.strip().split("\t")
                    self.domain_level[domain] = '\t'.join([total, riskpercent])
        except:
            pass
            
    def extractUrlKeywords(self, url, domain, isInAlexaTop):
        #d_urlkeywords_cnt
        
        domain = '_'.join([domain, str(isInAlexaTop)])
        
        host, sep, path = url.partition('/')
        items = re.split('[?=&/_-]', path)
        for item in items:
            if item.isdigit():
                continue
            
            if item.replace('.apk', '').isdigit():
                continue
            
            self.d_urlkeywords_cnt[item] += 1
            self.d_urlkeywords_domain[item].add(domain)
            self.d_urlkeywords_isInAlexTop[item].add(isInAlexaTop)
            
    def dumpUrlKeywords(self):
        fw = open('dump_urlkeywords_cnt.txt', 'wb')
        l_hdr = ['keyword', 'cnt', 'length', 'isInAlexaTop', 'hasNonBlackDomain', 'cntDomain', 'domains\n']
        fw.write('\t'.join(l_hdr))
        
        sorted_key_value = sorted(self.d_urlkeywords_cnt.items(), key=lambda item: item[1], reverse=True)
        for item in sorted_key_value:
            key = item[0]
            if not key.strip():
                continue
            
            if len(key) < 4:
                continue
            
            isInAlexaTop = False
            if True in self.d_urlkeywords_isInAlexTop[key]:
                isInAlexaTop = True
            
            hasNonBlackDomain = False
            for domain in self.d_urlkeywords_domain[key]:
                domain = domain.replace('_True', '').replace('_False', '')
                if domain not in self.s_suspiciousDomain:
                    hasNonBlackDomain = True
                    break
            
            infoAry = [key, str(item[1]), str(len(key)), str(isInAlexaTop), str(hasNonBlackDomain), str(len(self.d_urlkeywords_domain[key])), ' '.join(self.d_urlkeywords_domain[key])]
            fw.write('%s\n'%('\t'.join(infoAry)))
        fw.close()
    
    def checkHasCNAME(self, domain):
        hostInfo = self.d_domain_hosts[domain]
        host = list(hostInfo['hosts'])[0]
        
        try:
            cmd = 'ping -n 1 %s'%host
            output = subprocess.check_output(cmd, shell=True)
        except:
            return True
        
        #ping dz.zpjishi.com
        #正在 Ping dz.zpjishi.com.w.kunlunea.com [124.238.232.229] 具有 32 字节的数据:
        ping_host = finditem('Ping ', '[', output)
        print 'pinged host: ', ping_host
        if not ping_host:
            return True 
        
        if len(ping_host.strip()) != len(host):
            return True
            
        return False

    def judgeSuspicious_ByKeyWords(self, filename):
        '''
        根据总结的keyword pattern, 判定domain
        '''
        self.doStat_Domain_Hosts(filename)
        
        suspicious_type = "urlkeywords"
        
        #关键词的获取应该自动化产生
        s_suspicious_urlkeywords = set(["/pody.php", "/gl_my/", "/ldy/",
        "/zuoai",
"/zipai/",
"录像",
"成人",
"/huobao_",
"/screen/201",
"无码",
"/kim/",
"/ck/index",
".te",
'/kb_a',
":9001/"
'午夜',
"快播",
"草.榴.色.播",
"极品快播"
"快播.apk",
"KK午夜大片",
"午夜播放器",
"免费男人APP",
"夜.色.影.音",
"dx2772",
"hd437.apk",
"GK嘿咻大片",
"a246003.apk",
"a207540.apk",
"a246732.apk",
"a207501.apk",
"a207533.apk",
"a233401.apk",
"a246004.apk",
"a241101.apk",
"a2075127.apk",
"a246715.apk",
"a246726.apk",
"a246710.apk",
"a251802.apk",
"a208303.apk",
"a246711.apk",
"jl042",
"wyh001",
"jl049",
"jl012",
"xy017",
"wt054",
"a221801.apk",
"xy004",
"xy013",
"sm035",
"lyz002",
"jl004",
"a246709.apk",
"xqq027",
"a245301.apk",
"lyz025",
"a246758.apk",
"lyz039",
"lyz011",
"jl043",
"jl041",
"lyz023",
"lyz024",
"a2075102.apk",
"jl014",
"jl006",
"jl005",
"sm031",
"wt041",
"sw018",
"lyz042",
"jl047",
"jl045",
"hyz001",
"xqq129",
"xy014",
"zuoai010",
"lyz037",
"jl050",
"lyz028",
"lyz040",
"yx009",
"a246706.apk",
"pq1002",
"jl015",
"sdd008",
"jl009",
"xqq105",
"gp011",
"a246713.apk",
"xqq070",
"pq1032",
"jl008",
"xqq035",
"xg003",
"gp046",
"wt003",
"sw008",
"pq1035",
"a207519.apk",
"dx2775",
"lyz036",
"sdd014",
"gp034",
"gp004",
"wt058",
"wt4171",
"wt005",
"sw005",
"wt010",
"pq1046",
"wm006",
"播放内页",
"aqq018",
"yx012",
"pq1027",
"试看图片",
"rw021",
"xg004",
"xy012",
"wt072",
"xy020",
"xqq100",
"wt037",
"lyz001",
"lyz012",
"wt048",
"jl013",
"rw025",
"rw010",
"wt071",
"wt031",
"sm040",
"lyz043",
"jh003",
"zuoai024",
"mmn005",
"a2075145.apk",
"a246740.apk",
"rw018",
"sm039",
"wt057",
"wt078",
"pq1017",
"pq1004",
"a223014.apk",
"a259401.apk",
"wt045",
"lb1.jpg",
"pq1059",
"sm032",
"a252401.apk",
"yx007",
"嗳爱直播",
"lb3.jpg",
"ssm002",
"jiesuo.jpg",
"aqq008",
"西瓜影音",
"nvpn.jpg",
"zf38.jpg",
"xqq049",
"a252703.apk",

"lb4.jpg",
"e9efac69",
"xxo631",
"xxo614",
"免费男人app",
"xxo617",
"xxo634",
"xxo607",
"hd412.apk",
"hd407.apk",
"xxo650",
"xxo615",
"xxo643",
"a264801.apk",
"xxo623",
"hd824.apk",
"hd806.apk",
"a203101.apk",
"ht2542",
"a246708.apk",
"a207506.apk",
"a224901.apk",
"cctv.app",
"a207532.apk",
"a261601.apk",
"a246722.apk",
"a246705.apk",
"a225401.apk",
"a246737.apk",
"a246727.apk",
"a246755.apk",
"a246757.apk",
"av1004",
"咪咪快播",
"a246731.apk",
"a257501.apk",
"jl048",
"a246703.apk",
"soft3",
"xy001",
"a246712.apk",
"a264802.apk",
"a232201.apk",
"sm021",
"hd657.apk",
"sxmn2",
"a246761.apk",
"lyz013",
"a246743.apk",
"a246748.apk",
"xxo619",
"wt042",
"xy003",
"lyz027",
"sm038",
"sm016",
"lz118",
"a248303.apk",
"jl044",
"a246704.apk",
"a207558.apk",
"lyz038",
"jxav868",
"a240001.apk",
"hd839.apk",
"sm036",
"wt011",
"sm030",
"sw041",
"午夜快播.apk",
"wm010",
"jl046",
"pq1030",
"xy016",
"sm023",
"a2075180.apk",
"sm005",
"lyz033",
"lz124",
"AV694",
"wap001",
"sww001",
"gp047",
"wm009",
"wm016",
"jl056",
"wm003",
"bg003",
"a246719.apk",
"xqq122",
"gp032",
"a207201.apk",
"a246723.apk",
"sm026",
"sm010",
"xqq084",
"sm004",
"pq1036",
"a207527.apk",
"pq1057",
"wm015",
"a207524.apk",
"pq1061",
"a207541.apk",
"pq1008",
"pq1026",
"pq1025",
"wt006",
"sdd007",
"sdd003",
"sdd010",
"gp039",
"a207535.apk",
"rw007",
"gp006",
"gp013",
"gp019",
"sm034",
"zz009",
"mmn003",
"zuoai007",
"wt024",
"a246701.apk",
"a246730.apk",
"wt007",
"a259601.apk",
"jl055",
"wt074",
"wap002",
"a251801.apk",
"wm005",
"zz010",
"zz007",
"mmn002",
"yx004",
"yx005",
"jx008",
"pq1018",
"pq1015",
"pq1012",
"pq1037",
"a2075137.apk",
"pq1028",
"sdd006",
"sdd004",
"xqq014",
"gp020",
"gp021",
"sdd011",
"gp030",
"sdd020",
"hl001",
"rw006",
"gp014",
"gp017",
"gp018",
"xy018",
"xqq096",
"lx082",
"wt055",
"sm015",
"sm002",
"cc016",
"ls001",
"wt019",
"jl053",
"hd826.apk",
"mnm006",
"pq1050",
"pq1055",
"pq1045",
"pq1041",
"pq1048",
"jl057",
"pq1062",
"jx001",
"xqq047",
"xqq071",
"xqq074",
"pq1034",
"a232202.apk",
"xqq018",
"sww003",
"gp029",
"gp036",
"xy021",
"sdd013",
"lx081",
"rw014",
"xy019",
"xg010",
"wt068",
"zuoai022",
"gp043",
"mmn006",
"sm014",
"a246749.apk",
"a240002.apk",
"mg003",
"a246760.apk",
"hd840.apk",
"zz005",
"sw010",
"wt012",
"zzq001",
"hd836.apk",
"pq1056",
"pq1054",
"a2075111.apk",
"a246716.apk",
"pq1043",
"wt034",
"pq1023",
"a207502.apk",
"jl052",
"yx008",
"youmeng001",
"bg002",
"bg001",
"a248305.apk",
"a246736.apk",
"mmn007",
"bg013",
"pq1020",
"a246717.apk",
"xqq121",
"xqq012",
"sdd019",
"sdd012",
"xqq001",
"xqq005",
"sdd015",
"sdd021",
"a253201.apk",
"wt004",
"hd644.apk",
"xqq025",
"xqq002",
"rw011",
"a246720.apk",
"xg002",
"hd645.apk",
"wt080",
"a2075105.apk",
"gp045",
"wt060",
"wt023",
"sm013",
"xqq082",
"bg008",
"色y欲魅音.apk",
"cc019",
"rw015",
"a207513.apk",
"sw006",
"a2075134.apk",
"FeJR0",
"pq1051",
"a262101.apk",
"lyz051",
"wm017",
"yx006",
"a248306.apk",
"a246754.apk",
"rw067",
"yx013",
"pq1003",
"a246728.apk",
"xqq072",
"xqq077",
"xqq067",
"pq1010",
"a246724.apk",
"a223501.apk",
"xqq127",
"xqq125",
"gp025",
"gp026",
"jh002",
"a207546.apk",
"rw005",
"rw002",
"gp007",
"gp005",
"xqq112",
"a207516.apk",
"xqq008",
"rw019",
"rw013",
"pq1006",
"xg008",
"a2075197.apk",
"a246744.apk",
"wt070",
"gp044",
"sm027",
"gp056",
"GirlGabriel93",
"IXb1a",
"xqq092",
"scx78",
"xqq080",
"xqq089",
"lyz035",
"aqq015",
"jisu003",
"tz1ez",
"zz006",
"a246729.apk",
"cc022",
"androidsiri.zip",
"aqq002",
"jx002",
"aqq006",
"pq1021",
"sC0l6",
"wm011",
"AV206",
"wm004",
"pq1011",
"a207588.apk",
"sm024",
"5jYqi",
"a2075174.apk",
"xqq061",
"hd650.apk",
"jl003",
"rw027",
"rw022",
"rw032",
"rw031",
"rw034",
"a252201.apk",
"a246733.apk",
"gp009",
"sw004",
"xqq023",
"gp010",
"xg001",
"av1005",
"n8lfhl.apk",
"C34iZ",
"zuoai039",
"a207559.apk",
"w4mt4",
"zue73t.apk",
"5AvkY",
"9Z4Mc",
"kk2TS",
"ko80nv.apk",
"1TrvZ",
"MF5T8",
"l99Vm",
"i71td2.apk",
"wt043",
"wt044",
"日r逼视频",
"sm028",
"6dpn15.apk",
"IX5mU",
"jq22d1.apk",
"F8MWe",
"a246747.apk",
"lx080",
"lz198",
"phiqk7.apk",
"b72vec.apk",
"H0plAd.apk",
"8rMp1",
"a2075186.apk",
"woloi3.apk",
"g97h9",
"5RCZD",
"dd323",
"GirlAbby98",
"y2dQI",
"a246741.apk",
"l1uow6.apk",
"wt039",
"fi4rM",
"iV09B",
"i4fMc",
"m6zr9",
"a252704.apk",
"3h9su1.apk",
"B9xhW",
"TdF0U",

"a207577.apk",
"2ON1p",
"VYn5B",
"6dMDi",
"3GC0K",
"o7K0p",
"9sw7fm.apk",
"hd815.apk",
"ax5rrg.apk",
"pmetf2.apk",
"bm2x0r.apk",
"q869na.apk",
"X7B7t",
"9gwUA",
"73pt4",
"nof1y",
"岛国大黄片",
"pq1058",
"hzbqsdsan.zip",
"e2P0z",
"Ba7gd",
"x6j5u2.apk",
"16IvB",
"d7kgrq.apk",
"0ovipw.apk",
"css802.apk",
"fj9xtf.apk",
"lzsxsidl.zip",
"uAeR7",
"ukyd0r.apk",
"sw045",
"ymh1b6.apk",
"ksn5c",
"a218201.apk",
"l9NTv",
"9VvMQ",
"dx531k.apk",
"sy65zb.apk",
"PDD3p",
"vl7b88.apk",
"wdg001",
"mmn004",
"mcy076.apk",
"Eag0r",
"6o8dj5.apk",
"4Ugfn",
"wj3442",
"aqq020",
"5otx0k.apk",
"gbf5pd.apk",
"w0MW4",
"rw068",
"ohcw63.apk",
"B8uKS",
"pq1019",
"hb2t0s.apk",
"yx011",
"a207512.apk",
"lUL3S",
"xqq044",
"2Kp9J",
"msPo3",
"vk6pa",
"pUXQ5",
"086S1",
"jygtp7.apk",
"yx010",
"5j7g7r.apk",
"H6CvV",
"hd653.apk",
"fangkhez.zip",
"p3vp9f.apk",
"x8y19p.apk",
"4x52wd.apk",
"Yc9mg",
"xqq063",
"hd730.apk",
"Y0Yzb",
"ono2b3.apk",
"bg014",
"a2075139.apk",
"2HuoP",
"papyouxiting.zip",
"8UVbt",
"rw023",
"a246002.apk",
"gp024",
"gceK3",
"3ot8U",
"HIP5f",
"dyz001",
"54vrwk.apk",
"g4Yf7",
"qan9pb.apk",
"K9y6j",
"q9HNC",
"zuoai029",
"slw48f.apk",
"xqq095",
"TPPF8",
"四虎影库.apk",
"2g04ds.apk",
"cc025",
"rdkb4b.apk",
"色s影密播",
"b3dt9c.apk",
"hd405.apk",
"nz5hE",
"a223007.apk",
"a246707.apk",
"rw012",
"iwFd5",
"gp012",
"xy009",
"fk1t18.apk",
"hd621.apk",
"guf5p6.apk",
"a2075138.apk",
"xg007",
"xg009",
"sOk6q",
"6afa2f.apk",
"3hufan.apk",
"mu0la5.apk",
"umep6z.apk",
"ut53tl.apk",
"q6asll.apk",
"p9bf74.apk",
"w4ydiu.apk",
"ukad2l.apk",
"sbbgx7.apk",
"j2me16.apk",
"w2AHK",
"d34pkf.apk",
"72k7qc.apk",
"9j49o8.apk",
"f449u3.apk",
"JQuw3",
"cf341y.apk",
"v3fhtx.apk",
"05o5o4.apk",
"mn8u29.apk",
"lxzz9",
"r2tqdx.apk",
"s4tm8h.apk",
"bv1tu6.apk",
"zk3zvj.apk",
"s22tL",
"4qdy9x.apk",
"qcmz8p.apk",
"t6y7qb.apk",
"oym33y.apk",
"c49mce.apk",
"qw20fx.apk",
"co832g.apk",
"dn6p9a.apk",
"2elq89.apk",
"g4ild",
"hg745m.apk",
"k9p6q6.apk",
"oz2x9f.apk",
"kcj7x0.apk",
"jqj8zq.apk",
"9BDS2",
"1n5mo3.apk",
"ja1iB",
"55edza.apk",
"r4rl4f.apk",
"HYI7M",
"vske04.apk",
"wpotb5.apk",
"vk69yg.apk",
"sr0u5i.apk",
"hrq1j7.apk",
"rlq4px.apk",
"吉吉影音",
"1fo4zi.apk",
"bqaj46.apk",
"fvyg5t.apk",
"jev9qw.apk",
"iavp96.apk",
"zo1ynt.apk",
"2ly1nh.apk",
"4sldos.apk",
"yXBg1",
"8xlxyt.apk",
"hd816.apk",
"E89VL",
"6YuXy",
"0xudzw.apk",
"zlt4xr.apk",
"vmxor5.apk",
"zn4q8a.apk",
"0AvP5i.apk",
"y70d1p.apk",
"so39sc.apk",
"21s8xo.apk",
"UAu07",
"jmutp0.apk",
"6ia9y4.apk",
"sh588.apk",
"T0shS",
"q5edw3.apk",
"Y9wfU",
"1gncld.apk",
"2oUHJ",
"ZJIk1",
"sq3g0h.apk",
"6KLOv",
"lv77q8.apk",
"9737mj.apk",
"dz5vs5.apk",
"93fwiq.apk",
"eorb8v.apk",
"CdRU3",
"2hdwj4.apk",
"bn10h8.apk",
"6IhJg",
"b6nql2.apk",
"7vb19y.apk",
"k0g5xc.apk",
"6c8hi7.apk",
"sm033",
"sm037",
"xmfq53.apk",
"nnt46t.apk",
"37d0gc.apk",
"ybgl50.apk",
"12lr7e.apk",
"4cf1vt.apk",
"0tFqW",
"tIw42",
"xb7u9p.apk",
"j0pamz.apk",
"IGv6z",
"sdniq6.apk",
"wZ9Bm",
"hd409.apk",
"boyzl3.apk",
"3hjgxy.apk",
"g7gtii.apk",
"7JgS0",
"ngpk6g.apk",
"CJ2fX",
"qa8lo0.apk",
"1ogil",
"ni7qss.apk",
"5R0Cr",
"3KQoJ",
"ljfh8g.apk",
"57y8s0.apk",
"eiuq7c.apk",
"1lzq5a.apk",
"y7e3x5.apk",
"2avxwu.apk",
"k0x7kf.apk",
"1a1qp3.apk",
"j1f4gm.apk",
"ti76s8.apk",
"v5h9ep.apk",
"6of8f5.apk",
"qr7bec.apk",
"hs8a92.apk",
"v0rzq2.apk",
"st9ncd.apk",
"a246746.apk",
"2w0vuk.apk",
"ma2oxl.apk",
"ra7Z7",
"2ntuek.apk",
"yqhl2u.apk",
"oy07xf.apk",
"d9huvx.apk",
"hg9op9.apk",
"wW7Sw",
"vp7hf5.apk",
"m3zvrl.apk",
"y5id17.apk",
"u4yIV",
"30wh2c.apk",
"7avjao.apk",
"zy9o0k.apk",
"x3xkqc.apk",
"v6PKV",
"30zkm0.apk",
"9qdpyt.apk",
"2f6sdv.apk",
"hpq0jc.apk",
"ok6hyn.apk",
"6mmK8",
"aja8g7.apk",
"6l6J4",
"5r6efl.apk",
"kcL2b",
"c43mz7.apk",
"kso4mp.apk",
"激情快播cmb",
"a6c8b2.apk",
"k1zx4z.apk",
"cwzr3c.apk",
"th8vgj.apk",
"x78tbd.apk",
"alcpd9.apk",
"u18kni.apk",
"B0LNb",
"8lf1sr.apk",
"n6vffx.apk",
"zhtm63.apk",
"xv6l3q.apk",
"Y91A9",
"94y89b.apk",
"s0ezor.apk",
"rcixd6.apk",
"8j7g1z.apk",
"888s45.apk",
"u6sex6.apk",
"mc2cny.apk",
"dd305",
"cdA0f",
"d30z4t.apk",
"FP2611",
"rgm77d.apk",
"md2dV",
"halfu9.apk",
"DSM0z",
"1t9xui.apk",
"ret66",
"Th0aC",
"S2XMP",
"夜色快播",
"4T29z",
"a0jhek.apk",
"DENw9",
"P0uKH9.apk",
"q5.jpg",
"9xvpmh.apk",
"kbqn1a.apk",
"d5l2p9.apk",
"y4sdr0.apk",
"ezm9tt.apk",
"X9ACD",
"zbv1nm.apk",
"7oeuk8.apk",
"H00001",
"jXz6P",
"k2t3ou.apk",
"hd837.apk",
"ww68vy.apk",
"qague7.apk",
"R30az",
"s8h7h7.apk",
"xd0Ju",
"mzj4vb.apk",
"tnqj99.apk",
"tqtpc1.apk",
"福利撸.apk",
"5x6wl4.apk",
"iqp4ct.apk",
"p0k190.apk",
"x2yaup.apk",
"717sf5.apk",
"tgm2jp.apk",
"q9eb60.apk",
"td3zm2.apk",
"xsv9lf.apk",
"bmlb2c.apk",
"svfw7a.apk",
"phfp5n.apk",
"sAQ8k",
"jp.spw.noe02.apk",
"sm012",
"sm017",
"a8gik2.apk",
"q13.jpg",
"6138kd.apk",
"i7RYb",
"3do0gd.apk",
"nt9bd5.apk",
"2jo5cm.apk",
"mBkE9",
"ZtiI1",
"9b3eid.apk",
"mng6na.apk",
"bk0eff.apk",
"操r逼视频",
"6u7bme.apk",
"smarttools92.apk",
"zre8tn.apk",
"7g3jnk.apk",
"a248901.apk",
"X1p1S",
"hq3etf.apk",
"d7jpmc.apk",
"ohnc7",
"2uwk8o.apk",
"q3prz5.apk",
"MfOR4",
"9kk1b0.apk",
"q1lzcs.apk",
"v7cwuu.apk",
"lctC9",
"2p6rzc.apk",
"qns84t.apk",
"0hh22q.apk",
"q45iwp.apk",
"E02SJ",
"q8nuan.apk",
"yq7eqg.apk",
"sese1013",
"txv35u.apk",
"3dh083.apk",
"tuzha2.apk",
"44f48o.apk",
"8Vg9c",
"3evjob.apk",
"1blbsa.apk",
"1k794m.apk",
"vxMI6",
"vs53xe.apk",
"kfjyb2.apk",
"MYN6L",
"d9e3yi.apk",
"fqf0s",
"2xl65m.apk",
"Fwm7Y",
"3s4kjd.apk",
"x42iuc.apk",
"sv9vi3.apk",
"878p12.apk",
"dis5om.apk",
"ae3bh7.apk",
"7yZjQ",
"mp5aro.apk",
"yhb3g4.apk",
"m6wym1.apk",
"B30Mp",
"4gze9C.apk",
"zmn02t.apk",
"e3069x.apk",
"e1zh7n.apk",
"jg0vdb.apk",
"0AjzF",
"a2075147.apk",
"3m2swn.apk",
"mg004",
"wriw2t.apk",
"ka63f9.apk",
"wc5fuc.apk",
"QUH5E",
"F1ASS",
"6aiojn.apk",
"e49rw3.apk",
"thfwa5.apk",
"bpec4k.apk",
"xqq039",
"vl6ue",
"lx6ce2.apk",
"f7uy61.apk",
"z889fw.apk",
"61k1vw.apk",
"8wv4v7.apk",
"4fozpk.apk",
"8vdx5f.apk",
"9mkqcw.apk",
"xjfh9c.apk",
"UC9YT",
"sm009",
"sm006",
"9nGlW",
"j9e61i.apk",
"zro211.apk",
"hr69rm.apk",
"youbo18.jpg",
"i46wmp.apk",
"onidn3.apk",
"lbf7ns.apk",
"80itpv.apk",
"wsu62k.apk",
"fetq7v.apk",
"7st8gm.apk",
"ql3dzj.apk",
"FL3JC",
"5o656q.apk",
"6ypiam.apk",
"kq7lyh.apk",
"14bea1.apk",
"GhV7G",
"ihjx4e.apk",
"yxq7ym.apk",
"aqq010",
"a246735.apk",
"vrj09i.apk",
"wd33nz.apk",
"jput10.apk",
"c2nxlb.apk",
"65zo8",
"qw2ucb.apk",
"vr6p4n.apk",
"khgqk9.apk",
"zfn4my.apk",
"l3tb21.apk",
"3NtSO",
"gQSB7",
"u8t1mh.apk",
"je9h3i.apk",
"2xmth9.apk",
"pr65d",
"vhx9xc.apk",
"Re3OX",
"b1SCP",
"clczeeqi.zip",
"ojn8zh.apk",
"sxmn#KDYYGZH",
"eajjw3.apk",
"0q49QI.apk",
"q15.jpg",
"5t4b2f.apk",
"ey4gl8.apk",
"4611v3.apk",
"2ijsbq.apk",
"ml9h6m.apk",
"gdo8gv.apk",
"9p4tfi.apk",
"9lqnox.apk",
"mto432.apk",
"pk3ydg.apk",
"9jimwg.apk",
"g670gy.apk",
"eun7cw.apk",
"n8lvio.apk",
"75di3n.apk",
"cj2nt3.apk",
"2bzluj.apk",
"uk2zz7.apk",
"uy1mi7.apk",
"kbp90s.apk",
"7ZNzo",
"cfme27.apk",
"z2qesd.apk",
"68l4b4.apk",
"f1a4g3.apk",
"1zidis.apk",
"q88l0o.apk",
"08o9cn.apk",
"zqzqc1.apk",
"tlztm2.apk",
"zgn7gd.apk",
"f9Tqi",
"t1jom5.apk",
"e12qq8.apk",
"t4m5a5.apk",
"7pgs5g.apk",
"h133qp.apk",
"jdz2y",
"a252701.apk",
"40po6p.apk",
"g7o0e8.apk",
"8f4kcn.apk",
"n0lun",
"zz4503.apk",
"MrQA8",
"wt030",
"wt035",
"2im6lk.apk",
"z9dgq7.apk",
"youbo16.jpg",
"598wpa.apk",
"p4n5fi.apk",
"3qzjn2.apk",
"n9kdh3.apk",
"apsd04.apk",
"0wju59.apk",
"6jyzaz.apk",
"2ia62j.apk",
"e5evjs.apk",
"8tgdjq.apk",
"pz93sj.apk",
"gF7ly",
"9scpo0.apk",
"pm4fuc.apk",
"c4qddq.apk",
"lyz008",
"648fzp.apk",
"h1jgia.apk",
"kk1nka.apk",
"d6m9d6.apk",
"v68t1d.apk",
"ilvca1.apk",
"cp7r4h.apk",
"mtn0ru.apk",
"rw009",
"ssm007",
"ssm004",
"bp34a",
"zpe5s3.apk",
"wzb0qa.apk",
"6jr2oa.apk",
"f1X9W",
"msnfn9.apk",
"6dblkq.apk",
"ksu9pq.apk",
"jkgd37.apk",
"odyxt5.apk",
"cr3bor.apk",
"av198",
"xf8n7v.apk",
"a223012.apk",
"k6gsi7.apk",
"skgbw2.apk",
"ar4o14.apk",
"DnY0M",
"wkxa17.apk",
"n8qe7z.apk",
"8mnq8f.apk",
"57rp4a.apk",
"yp6qjn.apk",
"dgns3m.apk",
"p3eh7f.apk",
"8gcz1o.apk",
"sw011",
"sw012",
"hux4uq.apk",
"3anxw9.apk",
"YlR48",
"Pcg4P",
"8zd67d.apk",
"x0sxx8.apk",
"4wwo2x.apk",
"u6enke.apk",
"9Bxwt",
"jcq3o1.apk",
"uR0nu",
"fCVN6",
"FYc3B",
"7toVQ",
"Ak69D",
"dvf9rx.apk",
"earh5m.apk",
"95nz7q.apk",
"c0lyq8.apk",
"m35b8w.apk",
"Qevp0",
"6b157d47",
"ivswz6.apk",
"v4480x.apk",
"5nlkt8.apk",
"sjjud7.apk",
"q1tlbt.apk",
"ya7imd.apk",
"kt4fvz.apk",
"c7roby.apk",
"mv065l.apk",
"849oct.apk",
"oawtf6.apk",
"ce7dyg.apk",
"np2wlv.apk",
"d3t4jx.apk",
"Eq6Tb",
"dfe9wj.apk",
"sd3l8h.apk",
"xkyd3b.apk",
"vgahp2.apk",
"6u20zg.apk",
"mnrf46.apk",
"9bzrb0.apk",
"Q2Pk7",
"5qngmc.apk",
"21qqe8.apk",
"0NkOp",
"n8penu.apk",
"f0mg8a.apk",
"fjxy3z.apk",
"iqcu3",
"bc9x1",
"7cqqx1.apk",
"row5e0.apk",
"6RCDk",
"y53PM",
"oe0kc7.apk",
"ei78ig.apk",
"pr03t7.apk",
"a2075131.apk",
"9vo3kh.apk",
"7w5h4t.apk",
"w72az4.apk",
"ghrgh0.apk",
"171kk4.apk",
"ssm012",
"ob81xv.apk",
"2np6pq.apk",
"d18c7m.apk",
"a29s66.apk",
"172l3x.apk",
"yevo94.apk",
"f3gA6",
"07h4vr.apk",
"6c9lgt.apk",
"o9p8ah.apk",
"z2l3l4.apk",
"s8rdlc.apk",
"4stgmu.apk",
"3fq81f.apk",
"2lwppo.apk",
"8itunk.apk",
"k9e0ks.apk",
"bj0rp0.apk",
"gtl2cg.apk",
"9ug3ke.apk",
"yqbu9z.apk",
"saq8g8.apk",
"dF3YB",
"3zcgqz.apk",
"5jWAh",
"5a3x1p.apk",
"014dru.apk",
"6udcnf.apk",
"午夜大片",
"tWH9c",
"hjhh3w.apk",
"1ekkuu.apk",
"s5ung2.apk",
"wmy1r4.apk",
"510jha.apk",
"lx0851",
"JKQw1",
"b1pnke.apk",
"m1f674.apk",
"0tscs9.apk",
"eP74B",
"zpc2u8.apk",
"ee5thw.apk",
"tgjg83.apk",
"j2tjyy.apk",
"j5V3D",
"clk062.apk",
"ntfo0m.apk",
"z0g9k1.apk",
"xz6lpz.apk",
"5y39no.apk",
"v0m0bp.apk",
"aw46u3.apk",
"vbd231.apk",
"j1ac3y.apk",
"0kwoo7.apk",
"0lcmoc.apk",
"vpiw72.apk",
"ySZx2",
"zqcij2.apk",
"c9sIS",
"w28nff.apk",
"y6rjdb.apk",
"hd807.apk",
"hW5iI",
"wt018",
"bg18.png",
"2h7gim.apk",
"hd822.apk",
"sh2jt5.apk",
"hd701.apk",
"ej6tbm.apk",
"3m3pqj.apk",
"q14.jpg",
"o86w69.apk",
"c6sbzk.apk",
"uat216.apk",
"1s6jv0.apk",
"JXGS9",
"1kmaea.apk",
"bf1pve.apk",
"xzrxw9.apk",
"hd885.apk",
"46fpi0.apk",
"k1676l.apk",
"4f9qdc.apk",
"t8fsli.apk",
"ismo21.apk",
"auu09d.apk",
"092iz",
"jk37i0.apk",
"9szih3.apk",
"3k719u.apk",
"oqn53e.apk",
"3kb383.apk",
"xingbake41.apk",
"hxc7ym.apk",
"fcw47c.apk",
"rckw3l.apk",
"ssm026",
"mUM1G",
"r3ee8i.apk",
"0hhk1o.apk",
"itq4ya.apk",
"AHa7u",
"Zy3UK",
"touxo0.apk",
"dt30K",
"3Gz5K",
"iw9a16.apk",
"ph8if2.apk",
"GE303678",
"gwutb0.apk",
"9upwez.apk",
"q1.jpg",
"degr7z.apk",
"gv50sz.apk",
"NDpA1",
"obr3zd.apk",
"cpzs9r.apk",
"z0oKL",
"whe186.apk",
"gk1y9g.apk",
"xqq069",
"5jhp94.apk",
"yx6x5n.apk",
"b12bpz.apk",
"b5r4tn.apk",
"eg23os.apk",
"vbu1v0.apk",
"7u2fes.apk",
"zxc29v.apk",
"940c9t.apk",
"vz6kyt.apk",
"9fSv9",
"c14dzg.apk",
"wx3a2t.apk",
"wd4diw.apk",
"q3l4ek.apk",
"dy7616.apk",
"5gs39u.apk",
"leku001",
"7jxhrh.apk",
"2lqcl1.apk",
"co6nqm.apk",
"Uavm6",
"GE302647",
"mqddh3.apk",
"sese1045",
"yi5ikp.apk",
"u4g92z.apk",
"H0004",
"5iHkM",
"hpf0w2.apk",
"7htbhk.apk",
"no4m6o.apk",
"5ohetc.apk",
"y3wqzk.apk",
"ten8h0.apk",
"6ie087.apk",
"bzib3r.apk",
"kf3oql.apk",
"1n75fh.apk",
"beda9s.apk",
"vqyn91.apk",
"940w5z.apk",
"GE303303",
"op33ea.apk",
"vn1mtf.apk",
"8rBy5",
"r0s0nc.apk",
"Xk57v",
"vqbwt0.apk",
"3h484c.apk",
"bM4M2",
"tCdC0",
"0qbu6q.apk",
"8ihylk.apk",
"xv7nfu.apk",
"r4kjao.apk",
"x82gxr.apk",
"6ec2cr.apk",
"3r5ina.apk",
"yv3y5c.apk",
"v2nxmj.apk",
"3Tpxp4TK.apk",
"qorw42.apk",
"4rjuxh.apk",
"m69rnw.apk",
"7ppiqi.apk",
"1apjdh.apk",
"Blu2h",
"22vpes.apk",
"51qfqu.apk",
"2DMqH",
"v05ng8.apk",
"49hfko.apk",
"ptnmv0.apk",
"9q8t8a.apk",
"1x7jpq.apk",
"VK1Y1",
"don5ud.apk",
"2gmja0.apk",
"0beyxn.apk",
"z84tsg.apk",
"085v3e.apk",
"4vky1c.apk",
"1d9u5w.apk",
"4ix58s.apk",
"5ey9mt.apk",
"y9z4u2.apk",
"ko7rfq.apk",
"ei5k9f.apk",
"i1cnmm.apk",
"q8.jpg",
"n025vt.apk",
"sk11y4.apk",
"ne82pm.apk",
"sq1f5x.apk",
"a254401.apk",
"d6k0es.apk",
"ba911w.apk",
"xy8orz.apk",
"040b1a.apk",
"AV145",
"hch6nm.apk",
"y7wfsd.apk",
"o2XoE",
"twG96",
"0z3wd3.apk",
"esfw8j.apk",
"r0IER",
"fknem9.apk",
"a7qah2.apk",
"82gt3r.apk",
"bg005",
"S6c02",
"6pjsgc.apk",
"4jr480.apk",
"9clfxr.apk",
"fu93oj.apk",
"ovw5a5.apk",
"sage2z.apk",
"b47mfr.apk",
"e4k89s.apk",
"c64xjx.apk",
"d4hw23.apk",
"7ockoy.apk",
"8kc2t4.apk",
"q6x58u.apk",
"rjea8l.apk",
"yep4ws.apk",
"j2980z.apk",
"yp7v7r.apk",
"ssm017",
"3gIrj",
"d2zg2h.apk",
"l2P3o",
"ib0pa9.apk",
"3b66ag.apk",
"lgjr63.apk",
"k3w1xk.apk",
"pd86X",
"pq1053",
"成人播放器",
"xqq113",
"com.carvp.apk",
"xwms5j.apk",
"zwspy8.apk",
"eza2od.apk",
"7nvtly.apk",
"7klzmy.apk",
"wliz52.apk",
"3u3ss9.apk",
"8Qckw",
"w7ah78.apk",
"q1s2l4.apk",
"etd76s.apk",
"qel2mw.apk",
"bv5hbb.apk",
"JT25J",
"v0wwuo.apk",
"ImJ8M",
"f2t1eo.apk",
"a207537.apk",
"a2075162.apk",
"nlvpy7.apk",
"8y7fll.apk",
"qz71pk.apk",
"4dnvrk.apk",
"l9g6xn.apk",
"jx005",
"u4w198.apk",
"555phx.apk",
"2ol8wg.apk",
"a2075144.apk",
"vfg34v.apk",
"diu516.apk",
"wT1ar",
"g04zj3.apk",
"lyz046",
"7pf3uy.apk",
"jduu98.apk",
"ug8heg.apk",
"2h82eo.apk",
"d7LAw",
"iyj4e5.apk",
"54sUe",
"nq6awp.apk",
"wq77fg.apk",
"6kcy6",
"fnw4mr.apk",
"lwst5q.apk",
"8mnyzn.apk",
"n0xCl",
"kahl2g.apk",
"vl4vll.apk",
"3c98jb.apk",
"l07eg0.apk",
"4fb2dd.apk",
"w11pea.apk",
"ijl7ck.apk",
"j6dnd8.apk",
"v4etsz.apk",
"9rlisi.apk",
"u4bfem.apk",
"kissnight.jpg",
"2a0ydv.apk",
"啪啪影院.apk",
"8zwxg5.apk",
"may828.apk",
"kvtgj4.apk",
"qz3y8c.apk",
"kbs6p4.apk",
"owdda0.apk",
"q1AKw",
"svxs80.apk",
"nh0tla.apk",
"Kr4d1",
"1pc2rp.apk",
"idj65t.apk",
"2otb3y.apk",
"yn2wq4.apk",
"jl0rnj.apk",
"3pna8j.apk",
"e02orr.apk",
"z2def1.apk",
"5u6w7i.apk",
"1ff1y5.apk",
"y9sjuy.apk",
"h0y6z4.apk",
"2tip8o.apk",
"d0rmgr.apk",
"8mly59.apk",
"pq1047",
"tyal6a.apk",
"xqq022",
"5d1d6b.apk",
"g8cftu.apk",
"1oj4bv.apk",
"快播影院",
"42jhxs.apk",
"0Lgi6",
"26r586.apk",
"tsbk11.apk",
"9plsd0.apk",
"sb3pyb.apk",
"x9iovi.apk",
"ne1vem.apk",
"iex6b1.apk",
"8Ts3gQ.apk",
"bl7u2r.apk",
"3wefa7.apk",
"UEPz0",
"62gu3i.apk",
"ap6w3a.apk",
"47Gge",
"bh3fhxbd.apk",
"1g22q4.apk",
"Nghe4",
"hd627.apk",
"ijo1xk.apk",
"i26l8k.apk",
"da3uix.apk",
"360permroot.apk",
"gwpf38.apk",
"1en72q.apk",
"pgu8c6.apk",
"4uyffw.apk",
"4ei41r.apk",
"kcvi0i.apk",
"A7Juy",
"l3cq0x.apk",
"93bcil.apk",
"o1b94o.apk",
"a0x4K",
"qgemlssyb.zip",
"0t3wi4.apk",
"rEc15",
"2elk03.apk",
"aqq005",
"zyy78c.apk",
"2wswg2.apk",
"j633m3.apk",
"wjig74.apk",
"hy7fp",
"y3lf6t.apk",
"lqa24i.apk",
"8lFt55.apk",
"w180sa.apk",
"zic32j.apk",
"15z8y0.apk",
"cfxt2f.apk",
"9zz7v",
"fk6ozk.apk",
"a248304.apk",
"msdI2",
"ov3o5t.apk",
"jgcto7.apk",
"1a0fek.apk",
"whqn84.apk",
"fdseb4.apk",
"m1tus7.apk",
"zo3q45.apk",
"a5pkuv.apk",
"jtt4mx.apk",
"6s3oj4.apk",
"5kx7l0.apk",
"vsy9l7.apk",
"9tlvt9.apk",
"V8UYP",
"4ypjmk.apk",
"M8e70",
"3949bw.apk",
"sp008",
"k54q5m.apk",
"pr66e0.apk",
"pq2qxw.apk",
"v6Yyu",
"2ya5ck.apk",
"92wk0u.apk",
"erx76n.apk",
"nawz1t.apk",
"e3m7wm.apk",
"6t3ya6.apk",
"oxGs1",
"v7dlX",
"00mdyf.apk",
"Wy1Zj",
"7gpsco.apk",
"vmVi2",
"sh305",
"ta39kv.apk",
"39m8uk.apk",
"odj3A",
"407hbz.apk",
"jm0ve",
"l7v6o0.apk",
"zl5mdy.apk",
"DAg07",
"5yp0ft.apk",
"2wvsuh.apk",
"yeId3",
"9p9iI",
"ybt4gv.apk",
"0dwc9x.apk",
"福利爽片3.apk",
"KzT81",
"laq9x8.apk",
"fel8gl.apk",
"dmsc9m.apk",
"3g7xwm.apk",
"tk8in1.apk",
"c3TA3",
"vhv9zj.apk",
"xqq055",
"jcwc7i.apk",
"a1wzgw.apk",
"xgy8gk.apk",
"gq7ho",
"p7x94h.apk",
"8wst8i.apk",
"vc6td5.apk",
"5gowhg.apk",
"sAnS7",
"aqq014",
"aqq012",
"xzL9p",
"cpgz2r.apk",
"V6yF3",
"ovv3kx.apk",
"1wxfrg.apk",
"4ckjt8.apk",
"9uv1tt.apk",
"h9hl9b.apk",
"8.00E+25",
"ly4yps.apk",
"d2aod0.apk",
"5lkjkd.apk",
"z6D1b",
"qerkf5.apk",
"mekj2n.apk",
"I26xU",
"lwzI8",
"e5mu4",
"r14lL",
"sg116",
"w17j0d.apk",
"d6xgfz.apk",
"H0255",
"2nfhts.apk",
"6qpfb3.apk",
"aii9ph.apk",
"4mntn3.apk",
"S4YJ9",
"6t27U",
"q12.jpg",
"mzfzqxbsdb.zip",
"d7u2cq.apk",
"8vdatb.apk",
"e4uok2.apk",
"wigi5p.apk",
"Jae9h",
"v5zzxc.apk",
"4IiqS",
"6tjzvt.apk",
"3gldqy.apk",
"8ag3pa.apk",
"YR2pn",
"85t2vn.apk",
"xS4U7",
"84bo97.apk",
"l4yOT",
"pgpy4a.apk",
"ohh6u2.apk",
"8l47ua.apk",
"h4jqhq.apk",
"vldkw9.apk",
"3qk7z6.apk",
"hpe2sk.apk",
"buzh2boxx.apk",
"zkxxo5.apk",
"pq4vec.apk",
"hd872.apk",
"0hb2cc.apk",
"367B.jpg",
"n3h55j.apk",
"lbnm25.apk",
"cx19nc.apk",
"tb0dq2.apk",
"rsl7d2.apk",
"8txi2v.apk",
"KbK8X",
"3pl196.apk",
"jx006",
"mbww2z.apk",
"QZut1",
"f5w728.apk",
"1jnlf1.apk",
"1x6kkb.apk",
"bhjab9.apk",
"q7mqkw.apk",
"a206101.apk",
"juo38n.apk",
"8oqjkf.apk",
"6nbize.apk",
"CEQa2",
"zfm58w.apk",
"c1o3l2.apk",
"G5h5A",
"3fy9l1.apk",
"bg18.jpg",
"rw4ni9.apk",
"3yjxck.apk",
"qjpt0m.apk",
"gn765k.apk",
"y4svq1.apk",
"6t5136.apk",
"c9te0q.apk",
"9sgt6a.apk",
"vzp7u5.apk",
"5fl6ev.apk",
"1rubmm.apk",
"jleh7h.apk",
"qixps9.apk",
"esle3j.apk",
"tle3xx.apk",
"iq8p1c.apk",
"49l3tt.apk",
"iqlr8x.apk",
"0uuy4a.apk",
"nd2pnz.apk",
"xxo610",
"vy6m95.apk",
"dl432f.apk",
"5wpvse.apk",
"4gwv4r.apk",
"g7cxx9.apk",
"Gmc7d",
"6yz7ha.apk",
"2trz4l.apk",
"p4lhga.apk",
"qhog6h.apk",
"gb2mcu.apk",
"q6.jpg",
"zi9r9p.apk",
"i3zw6a.apk",
"b94qs4.apk",
"a8nsed.apk",
"po0cdx.apk",
"az5opr.apk",
"3zdqsh.apk",
"3hgg8c.apk",
"19dls5.apk",
"pq1014",
"youbo15.jpg",
"t8ccqw.apk",
"xf0umf.apk",
"toupaizipai",
"3iihit.apk",
"2jm7i6.apk",
"5353B",
"r5NCP",
"wtb9hg.apk",
"l1lh6g.apk",
"gpp4hf.apk",
"9ZMOz",
"6lcbmw.apk",
"ty8gl5.apk",
"aC9KW",
"jki3eg.apk",
"eaoa9u.apk",
"gkpb1r.apk",
"cn45gg.apk",
"b45bz8.apk",
"o92g2m.apk",
"75wao3.apk",
"1f8mkc.apk",
"o6bp7b.apk",
"e0rc8w.apk",
"3f5672bb",
"w9v30r.apk",
"mmso90.apk",
"06xivv.apk",
"182qyv.apk",
"8mTiL",
"2zgubi.apk",
"8pxuq",
"k5yf69.apk",
"0dbsbf.apk",
"IVF73",
"5ljub6.apk",
"4zcn5v.apk",
"25hyb8.apk",
"fs7rp6.apk",
"i4sf5f.apk",
"o3ubm0.apk",
"25f9vd.apk",
"P4VOC",
"b8JKr",
"ymcmy7.apk",
"58xiaofeidai.apk",
"5JScy",
"lewb1o.apk",
"9Krk9b.apk",
"3pesgl.apk",
"a88opq.apk",
"ryWQ0",
"lf9j88.apk",
"c71zcm.apk",
"o3t7v9.apk",
"8qszpb.apk",
"h6dwkc.apk",
"ts9qib.apk",
"2rwibw.apk",
"D7Bsj",
"s5knv2.apk",
"es1wx3.apk",
"msi5np.apk",
"j49vk9.apk",
"ebvac0.apk",
"xybtbdw.zip",
"sg100.apk",
"wYE4H",
"iuv21r.apk",
"Lm3tH",
"692RZ",
"abw8ak.apk",
"3l0gwu.apk",
"poc35h.apk",
"6poooo.apk",
"epw4jl.apk",
"95o3sv.apk",
"qa87ie.apk",
"f3ox4x.apk",
"rBR4P",
"txe72h.apk",
"j6qh9w.apk",
"q8h32n.apk",
"nkp1cf.apk",
"nj4xsg.apk",
"j5djs",
"z2j6tf.apk",
"4H0n5",
"f4nnmq.apk",
"z4jmy0.apk",
"67o4i0.apk",
"j4feyk.apk",
"6vin0v.apk",
"rc0p3t.apk",
"sNyN5",
"q17.jpg",
"hd813.apk",
"hg4604.apk",
"908pes.apk",
"3sus2l.apk",
"bieew6.apk",
"fc3xzy.apk",
"AV652",
"1jssdm.apk",
"xhe1je.apk",
"as0l3w.apk",
"qu9jue.apk",
"6nly7d.apk",
"4fivha.apk",
"jz2ob9.apk",
"om2v6n.apk",
"3v1ld0.apk",
"i4csxe.apk",
"8lcrbu.apk",
"pp4k8p.apk",
"VFN49",
"9gdyl0.apk",
"7thcx0.apk",
"5hmkg",
"kHD5H",
"xrf8nl.apk",
"ikuz4z.apk",
"p0nooi.apk",
"LYI6I",
"5dkoN",
"65qkcw.apk",
"4grm0k.apk",
"68tp1h.apk",
"l6ie5h.apk",
"ra8w8n.apk",
"q11.jpg",
"2nfsuv.apk",
"0wxSw",
"r7juc0.apk",
"os6r96.apk",
"03d24r.apk",
"色s涩密播",
"1aBOz",
"tLFe8",
"8phxf5.apk",
"i6c18u.apk",
"ATs2v",
"zV1Bx",
"0Qq06",
"a5Gth",
"9qfrue.apk",
"啪啪大黄片",
"19de9n.apk",
"l3263i.apk",
"a227601.apk",
"deqzs8.apk",
"tu9g9e.apk",
"urkq5y.apk",
"igrp53.apk",
"0bgipy.apk",
"8hvzi4.apk",
"uebef5.apk",
"0ajtqe.apk",
"d8TPP",
"cw9tmh.apk",
"tdwdc6.apk",
"xZde3",
"wyug7x.apk",
"o7xz2t.apk",
"gcu1gm.apk",
"2dy7M",
"4dubpd.apk",
"c8kzyo.apk",
"2p7wcb.apk",
"4bk4fp.apk",
"7sd4gi.apk",
"2861po.apk",
"winx64.zip)",
"0w0u8l.apk",
"ttyyd1.apk",
"loB5W",
"b1q5rb.apk",
"zpiH9",
"wxg420.apk",
"ao4zah.apk",
"4c64mg.apk",
"r4j108.apk",
"7ofxsl.apk",
"ao54jq.apk",
"sgtb95.apk",
"2dpl00.apk",
"mdn7tn.apk",
"d501aw.apk",
"5.0.96",
"y67z42.apk",
"elhja7.apk",
"ClRa7",
"j5pctb.apk",
"ES1Eg",
"s86xw5.apk",
"lep1vw.apk",
"89pwI",
"7ovgqf.apk",
"d8W1r",
"fsm7ri.apk",
"rb4fec.apk",
"mg7pwc.apk",
"szz00z.apk",
"nodkk8.apk",
"7keZF",
"西瓜影音H005",
"cgv095.apk",
"sh832",
"fm325",
"yn0xxq.apk",
"d0b2sc.apk",
"5ei7fv.apk",
"8ibeb3.apk",
"0sbpen.apk",
"2xio9x.apk",
"1ry86m.apk",
"q10.jpg",
"p9kmto.apk",
"fpvs2m.apk",
"2dpdiv.apk",
"a207572.apk",
"ulv4mc.apk",
"c9MbU",
"mnm011",
"qr0i2x.apk",
"8rhvmj.apk",
"z0czrs.apk",
"ze02z",
"bho4zt.apk",
"8ia7sl.apk",
"scv6jf.apk",
"z7zgj4.apk",
"9sx4uq.apk",
"xlb8hk.apk",
"Z1tZ4",
"x1baf1.apk",
"6k214y.apk",
"57guhl.apk",
"5bs7g2.apk",
"j8jkhu.apk",
"0851A",
"2fk6wr.apk",
"ey1o71.apk",
"k6kmzx.apk",
"u5lgcw.apk",
"2ovmgr.apk",
"saw3xc.apk",
"UYxF1",
"rz49hf.apk",
"4g8wnz.apk",
"jthae9.apk",
"Gx4sI",
"giam88.apk",
"shbju7.apk",
"7ee5yo.apk",
"5negji.apk",
"q20.jpg",
"z8hjbi.apk",
"bg018",
"bg011",
"1ds79v.apk",
"1hfxtj.apk",
"w3lxjl.apk",
"douqu2zhibo.apk",
"5zmk1c.apk",
"pq1029",
"lZi3J",
"Dmf3Y",
"v7y7x1.apk",
"9UBWn",
"j46c5u.apk",
"u6d6dn.apk",
"2ggzN",
"8sab7k.apk",
"6aahap.apk",
"9ifxbu.apk",
"3UoSP",
"sese203",
"4qJ8U",
"lo6uin.apk",
"v7yemw.apk",
"kfnjn5.apk",
"0AUoR",
"rf4ajh.apk",
"upltp8.apk",
"3pgqil.apk",
"C5lh6",
"h9gnvm.apk",
"qi8nz2.apk",
"mfpe06.apk",
"V0hLl",
"g05mak.apk",
"HSv8E",
"v3mm90.apk",
"yxzi50.apk",
"w5l35a.apk",
"81r715.apk",
"kr63dn.apk",
"aTT8j",
"kyd375.apk",
"xqq123",
"6h3rby.apk",
"pb316e.apk",
"v9530s.apk",
"zak755.apk",
"j6Nds",
"Z5eDo",
"q8k0rn.apk",
"q3hoeg.apk",
"oM2sK",
"rx2qfy.apk",
"772uth.apk",
"09qfam.apk",
"86H5H",
"8vbroo.apk",
"7lhEm",
"bbtrz7.apk",
"5j735a.apk",
"m0163r.apk",
"ic47sl.apk",
"321b5q.apk",
"w7ilkn.apk",
"b7yrt3.apk",
"BA7gx",
"j7t8fc.apk",
"uj1jar.apk",
"iw8tkk.apk",
"01w17f.apk",
"ls880l.apk",
"5xc5ev.apk",
"0t0gws.apk",
"onsr3c.apk",
"k3da4m.apk",
"7m6iij.apk",
"6up6wo.apk",
"q4.jpg",
"3j05mf.apk",
"uzwe8n.apk",
"24egaq.apk",
"sww002",
"qb4z36.apk",
"tX4eL",
"rw024",
"f9e5so.apk",
"q90jtt.apk",
"30PQF",
"ujbom3.apk",
"l2gyyg.apk",
"DiD9K",
"fxbp2a.apk",
"sxpysspjb.zip",
"a207573.apk",
"tro54x.apk",
"gj3aw9.apk",
"jv2jvc.apk",
"lph0g3.apk",
"y9zcmv.apk",
"09drtq.apk",
"cv4ip4.apk",
"LUpW3",
"a3u6qq.apk",
"w1g9a7.apk",
"tqv3br.apk",
"1scqmv.apk",
"fb7rn3.apk",
"xgiz0t.apk",
"oipwi9.apk",
"4c868e.apk",
"ssm014",
"w6u0ju.apk",
"b6s7a3.apk",
"gp023",
"0gq61c.apk",
"ezvyg4.apk",
"4qzlv1.apk",
"szd4J",
"hsp6q1.apk",
"2gegec.apk",
"ryc2i",
"h7MPS",
"jfs7ut.apk",
"yfx0r2.apk",
"aiuk3a.apk",
"8BjXS",
"9y884c.apk",
"scde1z.apk",
"53nar0.apk",
"u5ku2r.apk",
"squarehome2.apk",
"Eb3W5",
"7t8zw5.apk",
"60rj3m.apk",
"7mi7zy.apk",
"1hcrrl.apk",
"7nzbsb.apk",
"5ip2bp.apk",
"2mpn0h.apk",
"hd731.apk",
"afv2vo.apk",
"ndp5vw.apk",
"YoPp5",
"d4PwS",
"7bqgx0.apk",
"998ll4.apk",
"xqq134",
"zb5suf.apk",
"oi80tj.apk",
"go3tbm.apk",
"hd417.apk",
"1okizk.apk",
"jk25t",
"youbo14.jpg",
"7qll79.apk",
"tj7cc8.apk",
"g2ubainian.apk",
"53C9U",
"3rx1mu.apk",
"QYZ9N",
"rjvwq0.apk",
"9goyk1.apk",
"7hvxqe.apk",
"i9tzy5.apk",
"e4Y4J",
"lwyh57.apk",
"sjm2t2.apk",
"tJl5N",
"9mfnwx.apk",
"6v0j9h.apk",
"br7amb.apk",
"qB3rA",
"3r92g2.apk",
"9ik8g3.apk",
"f12b7z.apk",
"p6Ntj",
"sok85W.apk",
"bz5pad.apk",
"c4qp9n.apk",
"MUnT3",
"s4sk4o.apk",
"b57xhv.apk",
"rw033",
"51mdex.apk",
"qqysd0.apk",
"5x9b8n.apk",
"k3smf6.apk",
"69Tse",
"pn93ka.apk",
"J9avn",
"uty03p.apk",
"IJ9WE",
"hd847.apk",
"j8PwZ",
"Un6GM",
"XLiN2",
"Rv1bJ",
"3xy0cj.apk",
"d1u0dp.apk",
"y2f3jo.apk",
"30ajxp.apk",
"3u7adv.apk",
"x2kp9o.apk",
"rgmyy6.apk",
"e1rc0l.apk",
"l0upw9.apk",
"oh4td2.apk",
"aofe6z.apk",
"kzue8c.apk",
"nJBQ5",
"lkt7t4.apk",
"rdnp2",
"AlCl9",
"5uw1x",
"acrn6p.apk",
"7u3nao.apk",
"sh2244",
"r6fyxx.apk",
"fcj9ng.apk",
"6baqs",
"xhtbx9.apk",
"i6s0L",
"7jb4dj.apk",
"tdyv4d.apk",
"5z80h7.apk",
"qt6jzh.apk",
"4wg5wv.apk",
"8u3TG",
"fy33ry.apk",
"tycl6i.apk",
"5cd50v.apk",
"67akdj.apk",
"EKI6o",
"q8lzl9.apk",
"958g6x.apk",
"fz0v2t.apk",
"izop9t.apk",
"6hMNt",
"8v39ux.apk",
"seo4b2.apk",
"rjpsc7.apk",
"hl4vu2.apk",
"qp1406.apk",
"vtk7bk.apk",
"97色色.apk",
"5kfpqb.apk",
"36tg1v.apk",
"02cekz.apk",
"jw3lzx.apk",
"frkr7q.apk",
"2c2i5i.apk",
"0gygt9.apk",
"WPf92",
"gut7no.apk",
"yxxcedwpj.zip",
"yc66b3.apk",
"cv9dhq.apk",
"zd7hx9.apk",
"c1sr25.apk",
"n7ve5r.apk",
"6ublW",
"a246738.apk",
"TseI0",
"u894nm.apk",
"夜色啪啪.apk",
"y44pxx.apk",
"gqi3dt.apk",
"vd48ms.apk",
"542tkd.apk",
"evsgc4.apk",
"bs285k.apk",
"x04vk3.apk",
"1nytgv.apk",
"u6c5h1.apk",
"nmu9q9.apk",
"Rf8Vr",
"d0XPI",
"6ozjr9.apk",
"fssZ2",
"3lj368.apk",
"9rhRE",
"c27obc.apk",
"i0aqss.apk",
"l6BP3",
"816x71.apk",
"hpfd2c.apk",
"1ie5in.apk",
"km6s40.apk",
"h1c0jg.apk",
"qyx1gc.apk",
"f82j00.apk",
"q16.jpg",
"de61w1.apk",
"07AkM",
"h1fpzv.apk",
"0i6jma.apk",
"41c9i5.apk",
"6p6hn5.apk",
"1acx3d.apk",
"6pdc70.apk",
"nnw0gf.apk",
"nkwlv8.apk",
"t6epa0.apk",
"2kh2jb.apk",
"ai5050.apk",
"6hi7o1.apk",
"ugfs5b.apk",
"cnqly9.apk",
"4lmi50.apk",
"59utr4.apk",
"v2ltm2.apk",
"8j39rh.apk",
"youbo17.jpg",
"p4ss8x.apk",
"bv78o1.apk",
"c3sv3j.apk",
"1d15tu.apk",
"zz170",
"k33312.apk",
"xqq111",
"qf9nxl.apk",
"46s1r1.apk",
"q7kmst.apk",
"v5ZGh",
"2k3uop.apk",
"迷情影院.apk",
"7ixagy.apk",
"fj1buq.apk",
"a2075113.apk",
"jdytc5.apk",
"6o65vk.apk",
"xx2o0v.apk",
"f9r39r.apk",
"o8pvt1.apk",
"p4Iihh.apk",
"r2u8gj.apk",
"gs62j2.apk",
"zs2q9j.apk",
"sh830",
"54oj7m.apk",
"aTa0X",
"a207580.apk",
"fbh0hp.apk",
"jaa59t.apk",
"80jhet.apk",
"福利爽片9.apk",
"mg81pn.apk",
"51if69.apk",
"1svnyt.apk",
"rg2yfn.apk",
"yswk12.apk",
"xksxm8.apk",
"h89t6x.apk",
"5bgqcj.apk",
"w5sjv5.apk",
"81ua2p.apk",
"g7d2o",
"kifz5q.apk",
"6tr8zG.apk",
"GM225",
"Ornl5",
"lj580m.apk",
"ascqazsb.zip",
"AV午夜大片",
"x7ydiq.apk",
"vd5b6n.apk",
"3rpt5s.apk",
"97mbqe.apk",
"noob9s.apk",
"7s4ph5.apk",
"oCl23",
"3q0enq.apk",
"wkry9g.apk",
"hd4i1x.apk",
"Pr5J5",
"2pt6ex.apk",
"08l4jq.apk",
"zz298",
"mgyy9m.apk",
"evwc4m.apk",
"9hVv9",
"55nppb.apk",
"q19.jpg",
"Xzi0n",
"y9x6ne.apk",
"601wct.apk",
"2wwqye.apk",
"e33msd.apk",
"17gt24.apk",
"4unsmk.apk",
"4NkUR",
"a0rcap.apk",
"6qXCb",
"mir6ru.apk",
"ngq0d",
"4o1jyl.apk",
"69fhK",
"9zPeY",
"L48Qs",
"9nb1o1.apk",
"qt6fb0.apk",
"gT1tx",
"v0fhkq.apk",
"KcK68",
"ncv2v5.apk",
"q17cjb.apk",
"c9ohos.apk",
"xmzyxfsdl.zip",
"3zriib.apk",
"i5up0y.apk",
"1irhf9.apk",
"z4xb86.apk",
"xg005",
"4dke0y.apk",
"fc44yn.apk",
"2r3po9.apk",
"4k8amv.apk",
"ss6j2a.apk",
"WKxb0",
"4yf2is.apk",
"16lxrc.apk",
"9WmVu",
"vjv1wh.apk",
"z3s53z.apk",
"成人快播.apk",
"f5xst1.apk",
"47ov3i.apk",
"pw8sze.apk",
"ues6of.apk",
"96RYr",
"f5ci4r.apk",
"q18.jpg",
"zftg7f.apk",
"F3giR",
"d32njq.apk",
"nfui58.apk",
"vu6fk3.apk",
"s7qhum.apk",
"4GFTS",
"5zmbnx.apk",
"2L18A",
"orpm4y.apk",
"xc7waq.apk",
"awa9i8.apk",
"73b7w3.apk",
"5pz4gj.apk",
"eb1B5",
"824z2q.apk",
"45fwj2.apk",
"7lu2x6.apk",
"9n5mwy.apk",
"mruqi6.apk",
"5f93w0.apk",
"xqq046",
"y0s3q4.apk",
"hd415.apk",
"0lijnj.apk",
"q1lbgb.apk",
"c58ibu.apk",
"zv2bvr.apk",
"41zhq2.apk",
"9md01u.apk",
"2z62t3.apk",
"1c0xlb.apk",
"3wlu4j.apk",
"lZF4h",
"ru5qlt.apk",
"d311s1.apk",
"rkr5m1.apk",
"lc0dc8.apk",
"b8qvls.apk",
"6qqRE",
"youbo13.jpg",
"q4h80d.apk",
"pq1024",
"y7xsft.apk",
"su03s0.apk",
"66WOb",
"ht5ylu.apk",
"8Q6Nz",
"jr0nak.apk",
"v27d13.apk",
"4u3pnu.apk",
"Z2uMY",
"fx5lxl.apk",
"2bCLk",
"wpelv7.apk",
"0vb9l1.apk",
"1z01jh.apk",
"rdzyg2.apk",
"1icozr.apk",
"zy5j3f.apk",
"wuma36.jpg",
"gb0mo",
"ja2z56.apk",
"bd0g1q.apk",
"8VT9L",
"zp1uh6.apk",
"t5maqn.apk"])
        for domain, hostInfo in self.d_domain_hosts.iteritems():
            if hostInfo['isInAlexaTop'] or hostInfo['isip'] or not hostInfo['isvaliddomain']:
                continue
            
            for url in hostInfo['urls']:
                for keyword in s_suspicious_urlkeywords:
                    #remove those can be false 
                    if keyword.replace('.apk', '').isdigit():
                        continue
                    if url.find(keyword) != -1:
                        if self.checkHasCNAME(domain):
                            self.s_suspiciousDomain[domain].add(SUSPICIOUS_TYPE_URL_KEYWORDS)
                            #需要对keyword进行记录、验证
                            self.d_sus_domain_keyword[domain] = keyword
                            break
                        
    def judgeSuspicious_ByDomainHosts(self, filename):
        '''
        根据domain下hosts的分布，来判定domain恶意性：
        1） 应做到与样本级别无关
        2） 甚至应该做到与url无关， 仅是domain与Hosts的特征角度
        
        考虑以下几点：
        1）cnt_hosts 要达到一定值： 代表着在观察期内，同一个domain下，hosts处于多变的情况
        2) subhost_parts: 为1， 形如1482498504849.tahrdq.cn
        3) sub_max_len: 也就是
        
        
        E:\DailySample\JiJiuXiang\20161224\mkiller_all_host_ip\
        '''
        self.doStat_Domain_Hosts(filename)
        
        suspicious_type = "domain_hosts"

        for domain, hostInfo in self.d_domain_hosts.iteritems():
            if hostInfo['isInAlexaTop'] or hostInfo['isip'] or not hostInfo['isvaliddomain']:
                continue
             
            if len(hostInfo['subhost_parts']) !=1 or max(hostInfo['subhost_parts']) != 1:
                continue
            
            #xz.
            #comment	domain	cnt_hosts	cnt_urls	cnt_hosts/cnt_urls	subhost_parts	host_max_len	host_min_len
            #black, 漏报，domain_hosts角度的cnt_hosts应该检出	hblyny.com	57	699	0.004291845	1	13	13
            if hostInfo['host_min_len'] - len(domain) < 3:
                continue
                
            if hostInfo['cnt_hosts'] < 10:
                continue
            
            if hostInfo['cnt_hosts'] > 20:
                self.s_suspiciousDomain[domain].add(SUSPICIOUS_TYPE_DOMAIN_HOSTS)
                
    def judgeSuspicious_ByDomainNew(self, filename):
        self.doStat_Domain_Hosts(filename)
        
        suspicious_type = SUSPICIOUS_TYPE_DOMAIN_NEW
        for domain, hostInfo in self.d_domain_hosts.iteritems():
            if hostInfo['isInAlexaTop'] or not hostInfo['isvaliddomain']: # or hostInfo['isip'] :
                continue
                
            if not self.hitDomain(domain):
                #not new domain
                continue
                    
            if hostInfo['cnt_urls'] < 5:
                continue
                
            checkFileType = ['apk','zip', 'rar'] 
            hitFileType = True
            for filetype in list(hostInfo['filetype']):
                if filetype.lower() not in checkFileType:
                    hitFileType = False
                    break
                    
            if not hitFileType:
                continue
            
            self.s_suspiciousDomain[domain].add(SUSPICIOUS_TYPE_DOMAIN_NEW)
        
                
    def judgeSuspicious_ByDomainURLS(self, filename):
        self.doStat_Domain_Hosts(filename)
        
        suspicious_type = "domain_urls"
        for domain, hostInfo in self.d_domain_hosts.iteritems():
            if hostInfo['isInAlexaTop'] or hostInfo['isip'] or not hostInfo['isvaliddomain']:
                continue
                
            checkFileType = ['apk', 'exe', 'txt', 'png', 'gif', 'rar'] 
            '''
            if hostInfo['cnt_filetype'] != 1:
                continue
            
            if list(hostInfo['filetype'])[0].lower() not in checkFileType:
                continue
            '''
            hitFileType = True
            for filetype in list(hostInfo['filetype']):
                if filetype.lower() not in checkFileType:
                    hitFileType = False
                    break
                    
            if not hitFileType:
                continue
                    
            if hostInfo['cnt_hosts'] < 5:
                continue
            
            if hostInfo['cnt_hosts'] * 1.0 / hostInfo['cnt_urls'] < 0.5:
                continue
            
            if hostInfo['sub_max_len'] * 1.0 / hostInfo['host_max_len'] < 0.3:
                continue
                        
            #whether the string is meaningful, or just a random string
            #TBD
            
            #whether cname
            non_exists = generateRandomString(6)
            print domain
            cmd = 'ping -n 3 %s.%s'%(non_exists, domain)
            ret = subprocess.call(cmd, shell=True)
            if 1 == ret:
                continue
            
            self.s_suspiciousDomain[domain].add(SUSPICIOUS_TYPE_DOMAIN_URLS)
                    
    def dumpSuspicious_Domain_Hosts(self, filename):
        self.doStat_Domain_Hosts(filename)
        
        self.judgeSuspicious_ByDomainHosts(filename)
        self.judgeSuspicious_ByDomainURLS(filename)
        self.judgeSuspicious_ByKeyWords(filename)
        self.judgeSuspicious_ByDomainNew(filename)
        
        fw = open(filename + '_suspicious_for_wd.txt', 'wb')
        for domain in self.s_suspiciousDomain:
            hostInfo = self.d_domain_hosts[domain]
            url = list(hostInfo['urls'])[0][:100]
            
            infoAry = [domain, url]
            fw.write('%s\t'%('|'.join(self.s_suspiciousDomain[domain])))
            fw.write('%s'%('|'.join(infoAry)))
            try:
                fw.write('\t%s'%(self.d_sus_domain_keyword[domain]))
            except:
                pass 
            fw.write('\n')
        fw.close()
        
    def doStat_Domain_Hosts(self, filename):
        if self.d_domain_hosts:
            return
    
        fr = open(filename, 'rb')
        for line in fr:
            url = urllib.unquote(line.strip())
            
            try:
                #remove cdn manually, and the url returned with be used
                url = self.urlchecker.removeCDN(url)
                host, port, subhost, domain, tld, isip, isvaliddomain = self.urlchecker.getHostInfo(url, False)
                host[0]
            except:
                continue
                
            isInAlexaTop = self.url_util.isDomainInAlexTop(domain)
            
            #extract urlkeywords
            self.extractUrlKeywords(url, domain, isInAlexaTop)               

            if domain not in self.d_domain_hosts:
                self.d_domain_hosts[domain] = {'isip':isip, 
                                               'isvaliddomain' : isvaliddomain,
                                               'isInAlexaTop': isInAlexaTop,
                                               'cnt_hosts': 0,
                                               'subhost_parts': set(),     #how many . within subhost
                                               'host_max_len' : len(host),
                                               'host_min_len' : len(host),
                                               'sub_max_len' : 0,
                                               'hosts' : set(),
                                               'cnt_urls' : 0,  #all the urls count for this domain
                                               'urls' : set(),  #only one for each filetype
                                               'filetype': set(),
                                               'cnt_filetype' : 0,
                                               'path_best': set(),
                                               'cnt_path_best' : 0,
                                               'percent_part_host': 0.0,
                                               'percent_host_url': 0.0
                                               }
            self.d_domain_hosts[domain]['hosts'].add(host)
            self.d_domain_hosts[domain]['sub_max_len'] = max(self.d_domain_hosts[domain]['sub_max_len'], max(map(len, subhost.split('.'))))
            self.d_domain_hosts[domain]['cnt_urls'] += 1
            self.d_domain_hosts[domain]['subhost_parts'].add(subhost.count('.'))
            
            path_best = URLChecker_Util.getPath_Best(url)
            self.d_domain_hosts[domain]['path_best'].add(path_best)
            
            filetype = self.url_util.getFileType(url)
            if filetype not in self.d_domain_hosts[domain]['filetype']:
                self.d_domain_hosts[domain]['filetype'].add(filetype)
                self.d_domain_hosts[domain]['cnt_filetype'] += 1
                self.d_domain_hosts[domain]['urls'].add(url)
                
                max_hostpart = max(map(len, host.split('.')))
                self.d_domain_hosts[domain]['percent_part_host'] = max_hostpart * 1.0 / len(host)
                self.d_domain_hosts[domain]['percent_host_url'] = len(host) * 1.0 / len(url)
                
            if isip or not isInAlexaTop:
                continue
                
            #deal with alexa top
            directInAlexaTop = self.url_util.isDirectInAlexTop(domain, host)
            inAlexaTop = 'direct'
            if (not directInAlexaTop):
                inAlexaTop = 'indirect'
                
            if host not in self.d_hostInAlexaTop_urls:
                self.d_hostInAlexaTop_urls[host] = {'domain' : domain,
                                                    'inAlexa' : inAlexaTop,
                                                    'urls' : set()}
            self.d_hostInAlexaTop_urls[host]['urls'].add(url)
        fr.close()
        
        for domain in self.d_domain_hosts:
            self.d_domain_hosts[domain]['cnt_hosts'] = len(self.d_domain_hosts[domain]['hosts'])
            self.d_domain_hosts[domain]['host_max_len'] = max(map(len, self.d_domain_hosts[domain]['hosts']))
            self.d_domain_hosts[domain]['host_min_len'] = min(map(len, self.d_domain_hosts[domain]['hosts']))   
            self.d_domain_hosts[domain]['cnt_path_best'] = len(self.d_domain_hosts[domain]['path_best'])
            
    def dumpStat_Domain_Hosts(self, filename):
        self.doStat_Domain_Hosts(filename)
        
        fw_domain_hosts = open(filename + '_stat_domain_hosts.txt', 'wb')
        fw_domain_hosts_hdr = open(filename + '_stat_domain_hosts_hdr.txt', 'wb')
        hdrAry = ['total', 'riskpercent','new', 'comment', 'domain', 'isDomainInAlexTop', 'cnt_hosts', 'cnt_urls', 'cnt_hosts/cnt_urls', 
                  'subhost_parts', 'host_max_len', 'host_min_len', 'min/max', 
                  'sub_max_len', 'sub/max',
                  'part/host', 'host/url',
                  'cnt_filetype', 'cnt_path_best',
                  'isvaliddomain', '_domain_']
        fw_domain_hosts.write('\t'.join(hdrAry) + '\n')
        fw_domain_hosts_hdr.write('\t'.join(hdrAry) + '\n')
        
        sorted_domain_hosts = sorted(self.d_domain_hosts.items(), key=lambda item: len(item[1]['hosts']), reverse=True)
        for item in sorted_domain_hosts:
            domain = item[0]
            hostInfo = item[1]
            
            if hostInfo['isip'] or hostInfo['isInAlexaTop']:
                continue
            
            black = ''
            if domain in self.s_suspiciousDomain:
                black = 'black by engine: ' + ' '.join(self.s_suspiciousDomain[domain])
                
            new = ''
            if self.hitDomain(domain):
                new = 'new'
            
            risk = '\t'.join(['', ''])
            if domain in self.domain_level:
                risk = self.domain_level[domain]
                
            hdrAry = [risk, new, black, domain, hostInfo['isInAlexaTop'], hostInfo['cnt_hosts'], hostInfo['cnt_urls'], hostInfo['cnt_hosts'] * 1.0 / hostInfo['cnt_urls'],
                      ','.join(str(p) for p in hostInfo['subhost_parts']), hostInfo['host_max_len'], hostInfo['host_min_len'], hostInfo['host_min_len'] * 1.0 / hostInfo['host_max_len'],
                      hostInfo['sub_max_len'], hostInfo['sub_max_len'] * 1.0 / hostInfo['host_max_len'],
                      hostInfo['percent_part_host'], hostInfo['percent_host_url'], 
                      hostInfo['cnt_filetype'], hostInfo['cnt_path_best'],
                      hostInfo['isvaliddomain'], '_domain_'
                    ]
            hdrAry[2:-1] = map(str, hdrAry[2:-1])
            
            if hostInfo['cnt_filetype'] < 10:
                hdrAry.append('\t'.join(hostInfo['filetype']))
            
            if hostInfo['cnt_path_best'] < 10:
                hdrAry.append('\t'.join(hostInfo['path_best']))
            
            fw_domain_hosts.write("%s\n"%('\t'.join(hdrAry)))
            fw_domain_hosts_hdr.write("%s\n"%('\t'.join(hdrAry)))
            for host in hostInfo['hosts']:
                fw_domain_hosts.write("\t%s\n"%host)
            for url in hostInfo['urls']:
                fw_domain_hosts.write("\t%s\n"%url)
        fw_domain_hosts.close()
        fw_domain_hosts_hdr.close()

    def doSimpleStat(self, filename):
        '''
        do statistics about all the urls within filename,

        filename.txt
            ==> filename.txt_domain.txt             all domains within filename.txt
                filename.txt_domain_hosts.txt       domain and its hosts info within filename
                filename.txt_white_direct.txt       all urls whose host is directly in alex_top_1m, there are absolute safe
                filename.txt_white_indirect.txt     all urls whose host is indirectly in alex_top_1m, there are probably safe
                filename.txt_black.txt              all urls whose host is not in alex_top_1m, there are unknown, gray, or black
                                                        need to be checked
        '''
        fw_white_direct = open(filename + '_white_direct.txt', 'wb')
        fw_white_indirect = open(filename + '_white_indirect.txt', 'wb')
        fw_unknown = open(filename + '_unknown.txt', 'wb')
        fw_alexa_top_domain = open(filename + '_alexa_top_domain.txt', 'wb')
        s_alexa_top_domain = set()

        d_domain_hosts = {} # {domain:[hosts, hosts,...]}
        d_domain_urls = {}
        d_host_urls = {}
        d_ip_urls = {}
        d_port_urls = {}
        with open(filename, 'rb') as fr:
            for line in fr:
                if not line.strip():
                    continue
            
                #php%3Fmod%3Dtag%26id%3D3543.	1	_domain_	_invalid_
                #    bbs.hg707.com%2Fmisc.php%3Fmod%3Dtag%26id%3D3543
                line = urllib.unquote(line.strip())
                
                host, port, subhost, domain, tld, isip, isvalidDomain = self.urlchecker.getHostInfo(line, True)
                                                
                d_domain_hosts.setdefault(domain, set()).add(host)
                d_domain_urls.setdefault(domain, set()).add(line)
                d_host_urls.setdefault(host, set()).add(line)
                d_port_urls.setdefault(port, set()).add(line)

                info = line.strip() + '\t' + domain + '\t' + host + '\tisip\n'
                if not isip:
                    info = line.strip() + '\t' + domain + '\t' + host + '\tnotip\n'
                else:
                    d_ip_urls.setdefault(host, set()).add(line.strip())
                    
                if self.url_util.isDirectInAlexTop(domain, host):
                    fw_white_direct.write(info)
                    s_alexa_top_domain.add(domain)
                elif self.url_util.isIndirectInAlexTop(domain, host):
                    fw_white_indirect.write(info)
                    s_alexa_top_domain.add(domain)
                else:
                    fw_unknown.write(info)
        fw_white_direct.close()
        fw_white_indirect.close()
        fw_unknown.close()
        
        fw_alexa_top_domain.write('\n'.join(s_alexa_top_domain) + '\n')
        fw_alexa_top_domain.close()
            
        fw_domain = open(filename + '_domain.txt', 'wb')    
        fw_domain_hosts = open(filename + '_domain_hosts.txt', 'wb')
        fw_hosts = open(filename + '_hosts.txt', 'wb')
        sorted_domain_hosts = sorted(d_domain_hosts.items(), key=lambda item: len(item[1]), reverse=True)
        for item in sorted_domain_hosts:
            domain = item[0]
            hosts = item[1]
            invalidHit = '\n'
            if domain[0] == '.' or domain[-1] == '.':
                invalidHit = '\t_invalid_\n' 
                                
            fw_domain.write('%s%s'%(domain, invalidHit))
            fw_domain_hosts.write('%s\t%d\t_domain_%s'%(domain, len(hosts), invalidHit))
            
            for host in d_domain_hosts[domain]:
                fw_domain_hosts.write('\t%s\n'%host)
                fw_hosts.write(host + '\n')
                
        fw_domain.close()
        fw_domain_hosts.close()
        fw_hosts.close()
        
        dumpInfoCnt(filename + '_domain_urls.txt', d_domain_urls)
        dumpInfoCnt(filename + '_host_urls.txt', d_host_urls)
        dumpInfoCnt(filename + '_ip_urls.txt', d_ip_urls)
        dumpInfoCnt(filename + '_port_urls.txt', d_port_urls)
        
    def doStatPathBest(self, filename):
        d_pathbest_url = {}
        with open(filename, 'rb') as fr:
            for line in fr:
                if not line.strip():
                    continue
                    
                line = urllib.unquote(line.strip())
            
                host, port, subhost, domain, tld, isip, isvalidDomain = self.urlchecker.getHostInfo(line)
                path_best = self.url_util.getPath_Best(line)
                d_pathbest_url.setdefault(path_best, set()).add(line)
                
        dumpInfoCnt('dump_path_best.txt', d_pathbest_url)

def main():
    obj = URLChecker_Stat()
    #obj.loadNewHostIP()
    #obj.loadDomainLevel()
    
    
    obj.doSimpleStat(sys.argv[1])
    
    obj.dumpSuspicious_Domain_Hosts(sys.argv[1])
    obj.dumpStat_Domain_Hosts(sys.argv[1])
    
    #obj.doStat_Domain_Hosts(sys.argv[1])
    obj.dumpUrlKeywords()

    
    obj.doStatPathBest(sys.argv[1])
    
if __name__ == "__main__":
    main()